# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from oem_resolver.models.base_model_ import Model
from oem_resolver import util


class ResolveBulkResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, resolved: List[str]=None):  # noqa: E501
        """ResolveBulkResponse - a model defined in Swagger

        :param resolved: The resolved of this ResolveBulkResponse.  # noqa: E501
        :type resolved: List[str]
        """
        self.swagger_types = {
            'resolved': List[str]
        }

        self.attribute_map = {
            'resolved': 'resolved'
        }
        self._resolved = resolved

    @classmethod
    def from_dict(cls, dikt) -> 'ResolveBulkResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The resolveBulkResponse of this ResolveBulkResponse.  # noqa: E501
        :rtype: ResolveBulkResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resolved(self) -> List[str]:
        """Gets the resolved of this ResolveBulkResponse.

        List of URLs correlating to request VINs, of same size and order. Returns null if input value cannot be processed.  # noqa: E501

        :return: The resolved of this ResolveBulkResponse.
        :rtype: List[str]
        """
        return self._resolved

    @resolved.setter
    def resolved(self, resolved: List[str]):
        """Sets the resolved of this ResolveBulkResponse.

        List of URLs correlating to request VINs, of same size and order. Returns null if input value cannot be processed.  # noqa: E501

        :param resolved: The resolved of this ResolveBulkResponse.
        :type resolved: List[str]
        """

        self._resolved = resolved
