name: PRS Deploy

on:
  push:
    branches:
      - main
    paths:
      - coreservices/partsrelationshipservice/**
      - .github/workflows/partsrelationshipservice-deploy.yml

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy PRS to'
        required: true
        default: 'dev'

concurrency: partsrelationshipservice-infra

jobs:
  configure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: coreservices/partsrelationshipservice
    env:
      # Default environment to deploy (overridden when deploying manually)
      ENVIRONMENT: dev
    steps:
      - uses: actions/checkout@v2
      - name: "Configure environment to deploy (manual deployment only)"
        if: ${{ github.event_name == 'workflow_dispatch'}}
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
      - id: get-dataspace-partitions
        run: |
          set -euo pipefail # safe mode
          dataspace_partitions=$(jq -c .partitions cd/dataspace-partitions.json)
          echo "::set-output name=dataspace_partitions::$dataspace_partitions"
    outputs:
      dataspace_partitions: ${{ steps.get-dataspace-partitions.outputs.dataspace_partitions }}
      environment: ${{ env.ENVIRONMENT }}
      image_tag: ${{ github.run_id }}

  system_test:
    needs:
    - configure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: coreservices/partsrelationshipservice
    env:
      ENVIRONMENT: ${{ needs.configure.outputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: coreservices/partsrelationshipservice

      - name: "Build index of dataspace URLs for stub registry"
        run: |
          JSON_DEPLOYMENT=$(cat << EOF
                    {
                                   "bmw": {
                                     "api_url": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "https://catenaxdev001akssrv.germanywestcentral.cloudapp.azure.com/bmw/mtpdc"
                                     },
                                     "dataspace_partition": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "bmw"
                                     },
                                     "prs_db_administrator_username": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "psqladmin@cxmtpdc1-dev-bmw-prs-psql"
                                     },
                                     "prs_db_fqdn": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "cxmtpdc1-dev-bmw-prs-psql.postgres.database.azure.com"
                                     },
                                     "prs_db_name": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "prs"
                                     }
                                   },
                                   "zf": {
                                     "api_url": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "https://catenaxdev001akssrv.germanywestcentral.cloudapp.azure.com/zf/mtpdc"
                                     },
                                     "dataspace_partition": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "zf"
                                     },
                                     "prs_db_administrator_username": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "psqladmin@cxmtpdc1-dev-zf-prs-psql"
                                     },
                                     "prs_db_fqdn": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "cxmtpdc1-dev-zf-prs-psql.postgres.database.azure.com"
                                     },
                                     "prs_db_name": {
                                       "sensitive": false,
                                       "type": "string",
                                       "value": "prs"
                                     }
                                   }
                                 }
                    EOF
                    )
             echo $JSON_DEPLOYMENT > dataspace-deployments.json

      - run: |
          . cd/environments/$ENVIRONMENT.sh
          echo "TF_VAR_aks_cluster_name=$TF_VAR_aks_cluster_name" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=$TF_VAR_resource_group_name" >> $GITHUB_ENV

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.TF_VAR_aks_cluster_name }}
          resource-group: ${{ env.TF_VAR_resource_group_name }}

      - name: Cache maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: systemtest-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dataspace-deployments
          path: coreservices/partsrelationshipservice/dataspace-deployments.json

      - name: "Run system tests"
        run: |
          set -euo pipefail # safe mode
          mvn --batch-mode --update-snapshots -s settings.xml -Dgroups=SystemTests test -Denvironment=$ENVIRONMENT
        env:
          PRS_EDC_PKG_USERNAME: ${{ secrets.PRS_EDC_PKG_USERNAME }}
          PRS_EDC_PKG_PASSWORD: ${{ secrets.PRS_EDC_PKG_PASSWORD }}
